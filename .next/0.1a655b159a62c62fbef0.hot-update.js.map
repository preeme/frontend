{"version":3,"file":"0.1a655b159a62c62fbef0.hot-update.js","sources":["webpack:///config.js","webpack:///lib/withData.js"],"sourcesContent":["// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444`;\nexport const prodEndpoint = `https://mr-sickfits-backend.now.sh`;\nexport const perPage = 4;\n\n\n\n// WEBPACK FOOTER //\n// config.js","import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n    request: (operation) => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cart open value from cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            });\n            // write the cart state to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n\n\n\n// WEBPACK FOOTER //\n// lib/withData.js"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAZA;AADA;AAgBA;AACA;AADA;AAjBA;AAXA;AAiCA;AACA;AACA;;;;A","sourceRoot":""}